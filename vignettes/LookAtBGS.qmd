---
title: "Untitled"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
bgs <- readr::read_tsv("DefaultParsing/Experiment1_Report_BGS Factory Report (Normal).tsv")
head(bgs)

colnames(bgs)

# Assuming your dataframe is called `bgs`
# Clean up column names using stringr functions with the pipe operator
colnames(bgs) <- colnames(bgs) |>
  stringr::str_replace_all( "[[:space:]\\(\\)\\-]", "_") |>
  stringr::str_replace_all( "_+", "_") |>
  stringr::str_replace("_$", "")



colnames(bgs) |>   (\(x) grep("PEP", x, value = TRUE))()

mean(bgs$EG.ModifiedSequence == bgs$EG.ModifiedPeptide)
mean(bgs$EG.ModifiedSequence == bgs$FG.LabeledSequence)

ctoselect <- c(
  "R.FileName",
  "PG.ProteinGroups",
  "PG.ProteinAccessions",
  "PG.Qvalue",
  "PG.QValue_Run_Wise",
  "PG.Quantity",
  "PEP.GroupingKey",
  "PEP.IsProteotypic",
  "PEP.RunEvidenceCount",
  "PEP.NrOfMissedCleavages",
  "EG.ModifiedSequence",
  "EG.Qvalue",
  "EG.TotalQuantity_Settings",
  "FG.Qvalue",
  "FG.Charge",
  "FG.LabeledSequence",
  "FG.Quantity")


bgsf <- bgs[,ctoselect]


```

-   Elution group very much the same as fragment group, redundant information, however Charge is stored only for FG.

```{r}
par(mfrow = c(2,1))
plot(bgsf$EG.Qvalue, bgsf$FG.Qvalue)
plot(bgsf$EG.TotalQuantity_Settings, bgsf$FG.Quantity)

```

```{r}
mean(bgsf$EG.ModifiedSequence == bgsf$FG.LabeledSequence)

```
