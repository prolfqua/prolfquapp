% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R6_ProteinAnnotation.R
\name{ProteinAnnotation}
\alias{ProteinAnnotation}
\title{Decorates LFQData with a row annotation and some protein specific functions.}
\description{
Decorates LFQData with a row annotation and some protein specific functions.

Decorates LFQData with a row annotation and some protein specific functions.
}
\examples{

istar <- prolfqua::sim_lfq_data_peptide_config(Nprot = 100)
xd1 <- prolfqua::nr_obs_experiment(istar$data, istar$config, from_children = TRUE)

xd2 <- prolfqua::nr_obs_experiment(istar$data, istar$config, from_children = FALSE)
xd1$nr_child_exp |> table()

lfqdata <- prolfqua::LFQData$new(istar$data, istar$config)
lfqdata$data$protein_Id <- add_RevCon(lfqdata$data$protein_Id)
pids <- grep("^zz|^REV", unique(lfqdata$data$protein_Id), value = TRUE, invert = TRUE)
addannot <- data.frame(
  protein_Id = pids,
  description = stringi::stri_rand_strings(length(pids), 13)
)

addannot <- addannot |> tidyr::separate(protein_Id, c("cleanID", NA), remove = FALSE)
# ProteinAnnotation$debug("initialize")
# debug(nr_obs_sample)
xd4 <- prolfqua::nr_obs_sample(lfqdata$data, lfqdata$config)
xd3 <- prolfqua::nr_obs_experiment(lfqdata$data, lfqdata$config, from_children = FALSE)

pannot <- ProteinAnnotation$new(lfqdata,
  addannot,
  description = "description",
  cleaned_ids = "cleanID",
  pattern_contaminants = "^zz",
  pattern_decoys = "^REV"
)
stopifnot(pannot$annotate_decoys() == 10)
stopifnot(pannot$annotate_contaminants() == 5)
dd <- pannot$clean()
pannot$nr_clean()
pannot$get_summary()
stopifnot(nrow(dd) == 85)
tmp <- lfqdata$get_subset(dd)
dx <- pannot$clean(contaminants = TRUE, decoys = FALSE)
stopifnot(nrow(dx) == 95)
dx <- pannot$clean(contaminants = FALSE, decoys = TRUE)
stopifnot(nrow(dx) == 90)
dx2 <- pannot$filter_by_nr_children(exp_nr_children = 2)
dx3 <- pannot$filter_by_nr_children(exp_nr_children = 3)
stopifnot(nrow(dx2) >= nrow(dx3))

}
\concept{LFQData}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{row_annot}}{data.frame containing further information}

\item{\code{pID}}{column with protein ids}

\item{\code{full_id}}{column with protein id e.g. sp| can be same as pID}

\item{\code{description}}{name of column containing descriptions}

\item{\code{cleaned_ids}}{vector with columns containing addition IDs}

\item{\code{exp_nr_children}}{name of columns with the number of peptides}

\item{\code{pattern_contaminants}}{pattern_contaminants}

\item{\code{pattern_decoys}}{pattern_decoys}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProteinAnnotation-new}{\code{ProteinAnnotation$new()}}
\item \href{#method-ProteinAnnotation-annotate_decoys}{\code{ProteinAnnotation$annotate_decoys()}}
\item \href{#method-ProteinAnnotation-annotate_contaminants}{\code{ProteinAnnotation$annotate_contaminants()}}
\item \href{#method-ProteinAnnotation-get_summary}{\code{ProteinAnnotation$get_summary()}}
\item \href{#method-ProteinAnnotation-nr_clean}{\code{ProteinAnnotation$nr_clean()}}
\item \href{#method-ProteinAnnotation-clean}{\code{ProteinAnnotation$clean()}}
\item \href{#method-ProteinAnnotation-filter_by_nr_children}{\code{ProteinAnnotation$filter_by_nr_children()}}
\item \href{#method-ProteinAnnotation-clone}{\code{ProteinAnnotation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$new(
  lfqdata,
  row_annot = NULL,
  description = NULL,
  cleaned_ids = NULL,
  full_id = NULL,
  exp_nr_children = "nr_peptides",
  pattern_contaminants = NULL,
  pattern_decoys = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lfqdata}}{data frame from \code{\link{setup_analysis}}}

\item{\code{row_annot}}{data frame with row annotation. Must have columns matching \code{config$table$hierarchy_keys_depth()}}

\item{\code{description}}{name of column with description}

\item{\code{cleaned_ids}}{names of columns with cleaned Ids}

\item{\code{full_id}}{column with full protein ID}

\item{\code{exp_nr_children}}{column with the number of children}

\item{\code{pattern_contaminants}}{pattern_contaminants}

\item{\code{pattern_decoys}}{pattern_decoys}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-annotate_decoys"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-annotate_decoys}{}}}
\subsection{Method \code{annotate_decoys()}}{
annotate rev sequences
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$annotate_decoys()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pattern}}{default "REV_"}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-annotate_contaminants"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-annotate_contaminants}{}}}
\subsection{Method \code{annotate_contaminants()}}{
annotate contaminants
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$annotate_contaminants()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pattern}}{default "^zz|^CON"}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-get_summary"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-get_summary}{}}}
\subsection{Method \code{get_summary()}}{
get summary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$get_summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-nr_clean"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-nr_clean}{}}}
\subsection{Method \code{nr_clean()}}{
get number of neither contaminants nor decoys
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$nr_clean(contaminants = TRUE, decoys = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{contaminants}}{remove contaminants}

\item{\code{decoys}}{remove decoys
return number of cleans}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-clean"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-clean}{}}}
\subsection{Method \code{clean()}}{
remove REV and CON sequences
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$clean(contaminants = TRUE, decoys = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{contaminants}}{remove contaminants}

\item{\code{decoys}}{remove decoys}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-filter_by_nr_children"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-filter_by_nr_children}{}}}
\subsection{Method \code{filter_by_nr_children()}}{
filter by number children
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$filter_by_nr_children(exp_nr_children = 2)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exp_nr_children}}{minimum number of children required}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProteinAnnotation-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProteinAnnotation-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProteinAnnotation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
